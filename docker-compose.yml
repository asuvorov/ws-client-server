version: "3.8"

services:
  web:
    build:
      dockerfile: Dockerfile
      context: .
    command: gunicorn --bind :8000 asgi:channel_layer --worker-class uvicorn_worker.Worker --reload
    depends_on:
      - redis
      - db
    env_file:
      - ./docker_config/docker-compose/dev.env
    volumes:
      - ./src:/app/src
    ports:
      - "8000:8000"
    working_dir: /app/src
    healthcheck:
      test:         ["CMD", "/curl", "127.0.0.1:8000/api/status"]
      interval:     30s
      timeout:      2s
      retries:      3
      start_period: 1s

  redis:
    image:    arm64v8/redis:alpine
    command:  redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./docker_config/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: "exit 0"
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  db:
    image:    postgres:14.7-alpine
    # image:    docker.io/bitnami/postgresql:14
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - ./docker_config/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_HOST=localhost
      - POSTGRES_USER=ws_demo
      - POSTGRES_USERNAME=ws_demo
      - POSTGRES_PASSWORD=ws_demo
      - POSTGRES_DB=ws_demo
      - DATABASE_ADMIN_USERNAME=ws_demo
      - TWX_DATABASE_USERNAME=ws_demo
      - TZ=UTC
      - PGTZ=UTC
    ports:
      - 5432:5432
    healthcheck:
      test:     ["CMD", "pg_isready", "--username", "ws_demo"]
      interval: 1s
      retries:  120

  swagger:
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: /swagger/swagger.yml
    volumes:
      - ./swagger:/swagger
    ports:
      - 8081:8080

volumes:
  postgres-data:
    driver: local
